// Approach 1

void dfs(int node, int visited[], vector<int> adj[], vector<int> &ans)
    {
        visited[node]=1;
        ans.push_back(node);
        for(auto it:adj[node])
        {
            if(visited[it]==0)
            {
                dfs(it, visited, adj, ans);
            }
        }
        return;
    }
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int visited[V]={0};
        vector<int> ans;
        for(int i=0; i<V; i++)
        {
            if(visited[i]==0)
            {
                dfs(i, visited, adj, ans);
            }
        }
        
        return ans;
    }
